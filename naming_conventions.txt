naming_conventions.txt
Naming conventions adopted in this project

    File names

filename.h: header files. Contains class definitions, funtion declarations
            and inline implementation of short methods. There is no risk
            of confusion with C header files since we use only C++.
filename.cpp: source files. Contains the implementation of filename.h.
filename.hpp: template source files. Contains template classes and function
            and their implementation.
filename.test.cpp: unit test, usually for the classes defined in filename.h.
filename.o: object files, generated by the compiler from filename.o.
filename.d: dependencies files. Files generated and used by the build system
            to track dependencies between files, to speed up rebuilding
            the program if only few files were modified.
main.cpp: File that contains the main() function. It is compiled to a.out.
            Does not have an accompanying main.h file.
main.test.cpp: File that contains the main() funtion provided by the Catch
            test framework. It is linked together with all other
            filename.test.o to the executable test/test, that runs all
            the test cases.


    Classes

under_scores: used for "low-level classes". Normally templates that try to
        reconstruct, as cleanly as possible, some language feature that
        is "absent" - such as the C++ Standard Library classes (vector<>,
        unordered_map<>, iterator_traits<>) - or template classes built
        for reusability.
CamelCase: used for "high-level classes"; classes that are inherent to this
        program and are not reusable elsewhere.
